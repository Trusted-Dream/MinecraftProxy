name: MinecraftProxy
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  pytest:
    name: Run tests with pytest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8','3.9','3.10']

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup
      run: |
          sudo apt-get install python3-tk
          sudo apt-get install tk-dev

    # Pip Install
    - name: Install dependencies
      id: pip
      run: |
        python -m pip install -U pip
        python -m pip install pytest
        python -m pip install .

    # Running Pytest
    - name: Pytest
      id: pytest
      run: |
        disp=:99
        screen=0
        geom=640x480x24
        exec Xvfb $disp -screen $screen $geom 2>/tmp/Xvfb.log &
        export DISPLAY=:99
        python -m pytest

    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### `PIP Initialization` ‚öôÔ∏è\`${{ steps.pip.outcome }}\`
          #### Pytest üìñ\`${{ steps.pytest.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Pytest Status
      if: steps.pytest.outcome == 'failure'
      run: exit 1